{
    "swagger": "2.0",
    "info": {
        "title": "Django Movie",
        "description": "Test description",
        "license": {
            "name": "BSD License"
        },
        "version": "v1"
    },
    "host": "127.0.0.1:8000",
    "schemes": ["http"],
    "basePath": "/",
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        }
    },
    "security": [{
        "Basic": []
    }],
    "paths": {
        "/api/v1/actors/": {
            "get": {
                "operationId": "api_v1_actors_list",
                "description": "\u0412\u044b\u0432\u043e\u0434 \u0441\u043f\u0438\u0441\u043a\u0430 \u0430\u043a\u0442\u0435\u0440\u043e\u0432",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Number of results to return per page.",
                    "required": false,
                    "type": "integer"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The initial index from which to return the results.",
                    "required": false,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ActorList"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["api"]
            },
            "parameters": []
        },
        "/api/v1/actors/{id}/": {
            "get": {
                "operationId": "api_v1_actors_read",
                "description": "\u0412\u044b\u0432\u043e\u0434 \u0430\u043a\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u0440\u0435\u0436\u0438\u0441\u0441\u0435\u0440\u0430",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ActorDetail"
                        }
                    }
                },
                "tags": ["api"]
            },
            "parameters": [{
                "name": "id",
                "in": "path",
                "description": "A unique integer value identifying this \u0410\u043a\u0442\u0435\u0440\u044b \u0438 \u0440\u0435\u0436\u0438\u0441\u0441\u0435\u0440\u044b.",
                "required": true,
                "type": "integer"
            }]
        },
        "/api/v1/movie/": {
            "get": {
                "operationId": "api_v1_movie_list",
                "description": "\u0412\u044b\u0432\u043e\u0434 \u0441\u043f\u0438\u0441\u043a\u0430 \u0444\u0438\u043b\u044c\u043c\u043e\u0432",
                "parameters": [{
                    "name": "genres",
                    "in": "query",
                    "description": "Multiple values may be separated by commas.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "year",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "A page number within the paginated result set.",
                    "required": false,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MovieList"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["api"]
            },
            "parameters": []
        },
        "/api/v1/movie/{id}/": {
            "get": {
                "operationId": "api_v1_movie_read",
                "description": "\u0412\u044b\u0432\u043e\u0434 \u0444\u0438\u043b\u044c\u043c\u0430",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MovieDetail"
                        }
                    }
                },
                "tags": ["api"]
            },
            "parameters": [{
                "name": "id",
                "in": "path",
                "description": "A unique integer value identifying this \u0424\u0438\u043b\u044c\u043c.",
                "required": true,
                "type": "integer"
            }]
        },
        "/api/v1/rating/": {
            "post": {
                "operationId": "api_v1_rating_create",
                "description": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0444\u0438\u043b\u044c\u043c\u0443",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateRating"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CreateRating"
                        }
                    }
                },
                "tags": ["api"]
            },
            "parameters": []
        },
        "/api/v1/review/": {
            "post": {
                "operationId": "api_v1_review_create",
                "description": "\"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430 \u043a \u0444\u0438\u043b\u044c\u043c\u0443",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ReviewCreate"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ReviewCreate"
                        }
                    }
                },
                "tags": ["api"]
            },
            "parameters": []
        },
        "/auth/convert-token/": {
            "post": {
                "operationId": "auth_convert-token_create",
                "summary": "Implements an endpoint to convert a provider token to an access token",
                "description": "The endpoint is used in the following flows:\n\n* Authorization code\n* Client credentials",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/invalidate-sessions/": {
            "post": {
                "operationId": "auth_invalidate-sessions_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/jwt/create/": {
            "post": {
                "operationId": "auth_jwt_create_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/TokenObtainPair"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenObtainPair"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/jwt/refresh/": {
            "post": {
                "operationId": "auth_jwt_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/TokenRefresh"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenRefresh"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/jwt/verify/": {
            "post": {
                "operationId": "auth_jwt_verify_create",
                "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/TokenVerify"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenVerify"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/revoke-token/": {
            "post": {
                "operationId": "auth_revoke-token_create",
                "description": "Implements an endpoint to revoke access or refresh tokens",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/token/": {
            "post": {
                "operationId": "auth_token_create",
                "summary": "Implements an endpoint to provide access tokens",
                "description": "The endpoint is used in the following flows:\n\n* Authorization code\n* Password\n* Client credentials",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/token/login/": {
            "post": {
                "operationId": "auth_token_login_create",
                "description": "Use this endpoint to obtain user authentication token.",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/TokenCreate"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenCreate"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/token/logout/": {
            "post": {
                "operationId": "auth_token_logout_create",
                "description": "Use this endpoint to logout user (remove user authentication token).",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/": {
            "get": {
                "operationId": "auth_users_list",
                "description": "",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Number of results to return per page.",
                    "required": false,
                    "type": "integer"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The initial index from which to return the results.",
                    "required": false,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["auth"]
            },
            "post": {
                "operationId": "auth_users_create",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UserCreate"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserCreate"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/activation/": {
            "post": {
                "operationId": "auth_users_activation",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Activation"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Activation"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/me/": {
            "get": {
                "operationId": "auth_users_me_read",
                "description": "",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Number of results to return per page.",
                    "required": false,
                    "type": "integer"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The initial index from which to return the results.",
                    "required": false,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["auth"]
            },
            "put": {
                "operationId": "auth_users_me_update",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/User"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "patch": {
                "operationId": "auth_users_me_partial_update",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/User"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "delete": {
                "operationId": "auth_users_me_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/resend_activation/": {
            "post": {
                "operationId": "auth_users_resend_activation",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SendEmailReset"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SendEmailReset"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/reset_password/": {
            "post": {
                "operationId": "auth_users_reset_password",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SendEmailReset"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SendEmailReset"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/reset_password_confirm/": {
            "post": {
                "operationId": "auth_users_reset_password_confirm",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/PasswordResetConfirm"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordResetConfirm"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/reset_username/": {
            "post": {
                "operationId": "auth_users_reset_username",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SendEmailReset"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SendEmailReset"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/reset_username_confirm/": {
            "post": {
                "operationId": "auth_users_reset_username_confirm",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UsernameResetConfirm"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UsernameResetConfirm"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/set_password/": {
            "post": {
                "operationId": "auth_users_set_password",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SetPassword"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SetPassword"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/set_username/": {
            "post": {
                "operationId": "auth_users_set_username",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/SetUsername"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SetUsername"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "parameters": []
        },
        "/auth/users/{id}/": {
            "get": {
                "operationId": "auth_users_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "put": {
                "operationId": "auth_users_update",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/User"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "patch": {
                "operationId": "auth_users_partial_update",
                "description": "",
                "parameters": [{
                    "name": "data",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/User"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["auth"]
            },
            "delete": {
                "operationId": "auth_users_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["auth"]
            },
            "parameters": [{
                "name": "id",
                "in": "path",
                "description": "A unique integer value identifying this user.",
                "required": true,
                "type": "integer"
            }]
        }
    },
    "definitions": {
        "ActorList": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "\u0418\u043c\u044f",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "image": {
                    "title": "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                }
            }
        },
        "ActorDetail": {
            "required": ["name", "description"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "\u0418\u043c\u044f",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "age": {
                    "title": "\u0412\u043e\u0437\u0440\u0430\u0441\u0442",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "description": {
                    "title": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
                    "type": "string",
                    "minLength": 1
                },
                "image": {
                    "title": "\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                }
            }
        },
        "MovieList": {
            "required": ["title", "rating_user", "middle_star"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "title": {
                    "title": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "tagline": {
                    "title": "\u0421\u043b\u043e\u0433\u0430\u043d",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "category": {
                    "title": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f",
                    "type": "integer",
                    "x-nullable": true
                },
                "rating_user": {
                    "title": "Rating user",
                    "type": "boolean"
                },
                "middle_star": {
                    "title": "Middle star",
                    "type": "integer"
                },
                "poster": {
                    "title": "\u041f\u043e\u0441\u0442\u0435\u0440",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                }
            }
        },
        "Recursive": {
            "type": "object",
            "properties": {}
        },
        "Review": {
            "required": ["name", "text", "children"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "\u0418\u043c\u044f",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "text": {
                    "title": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
                    "type": "string",
                    "maxLength": 5000,
                    "minLength": 1
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Recursive"
                    }
                }
            }
        },
        "MovieDetail": {
            "required": ["reviews", "title", "description", "country", "url"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "readOnly": true
                },
                "directors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActorList"
                    },
                    "readOnly": true
                },
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActorList"
                    },
                    "readOnly": true
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Review"
                    }
                },
                "title": {
                    "title": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "tagline": {
                    "title": "\u0421\u043b\u043e\u0433\u0430\u043d",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "description": {
                    "title": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
                    "type": "string",
                    "minLength": 1
                },
                "poster": {
                    "title": "\u041f\u043e\u0441\u0442\u0435\u0440",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "year": {
                    "title": "\u0414\u0430\u0442\u0430 \u0432\u044b\u0445\u043e\u0434\u0430",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "country": {
                    "title": "\u0421\u0442\u0440\u0430\u043d\u0430",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "world_premiere": {
                    "title": "\u041f\u0440\u0438\u043c\u044c\u0435\u0440\u0430 \u0432 \u043c\u0438\u0440\u0435",
                    "type": "string",
                    "format": "date"
                },
                "budget": {
                    "title": "\u0411\u044e\u0434\u0436\u0435\u0442",
                    "description": "\u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0443\u043c\u043c\u0443 \u0432 \u0434\u043e\u043b\u043b\u0430\u0440\u0430\u0445",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "fees_in_usa": {
                    "title": "\u0421\u0431\u043e\u0440\u044b \u0432 \u0421\u0428\u0410",
                    "description": "\u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0443\u043c\u043c\u0443 \u0432 \u0434\u043e\u043b\u043b\u0430\u0440\u0430\u0445",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "fess_in_world": {
                    "title": "\u0421\u0431\u043e\u0440\u044b \u0432 \u043c\u0438\u0440\u0435",
                    "description": "\u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0443\u043c\u043c\u0443 \u0432 \u0434\u043e\u043b\u043b\u0430\u0440\u0430\u0445",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "maxLength": 130,
                    "minLength": 1
                }
            }
        },
        "CreateRating": {
            "required": ["star", "movie"],
            "type": "object",
            "properties": {
                "star": {
                    "title": "\u0417\u0432\u0435\u0437\u0434\u0430",
                    "type": "integer"
                },
                "movie": {
                    "title": "\u0424\u0438\u043b\u044c\u043c",
                    "type": "integer"
                }
            }
        },
        "ReviewCreate": {
            "required": ["email", "name", "text", "movie"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "name": {
                    "title": "\u0418\u043c\u044f",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "text": {
                    "title": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
                    "type": "string",
                    "maxLength": 5000,
                    "minLength": 1
                },
                "parent": {
                    "title": "\u0420\u043e\u0434\u0438\u0442\u0435\u043b\u044c",
                    "type": "integer",
                    "x-nullable": true
                },
                "movie": {
                    "title": "\u0424\u0438\u043b\u044c\u043c",
                    "type": "integer"
                }
            }
        },
        "TokenObtainPair": {
            "required": ["username", "password"],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "TokenRefresh": {
            "required": ["refresh"],
            "type": "object",
            "properties": {
                "refresh": {
                    "title": "Refresh",
                    "type": "string",
                    "minLength": 1
                },
                "access": {
                    "title": "Access",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TokenVerify": {
            "required": ["token"],
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "TokenCreate": {
            "type": "object",
            "properties": {
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                },
                "username": {
                    "title": "Username",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "UserCreate": {
            "required": ["username", "password"],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "Activation": {
            "required": ["uid", "token"],
            "type": "object",
            "properties": {
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "minLength": 1
                },
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "SendEmailReset": {
            "required": ["email"],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                }
            }
        },
        "PasswordResetConfirm": {
            "required": ["uid", "token", "new_password"],
            "type": "object",
            "properties": {
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "minLength": 1
                },
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                },
                "new_password": {
                    "title": "New password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "UsernameResetConfirm": {
            "required": ["new_username"],
            "type": "object",
            "properties": {
                "new_username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "SetPassword": {
            "required": ["new_password", "current_password"],
            "type": "object",
            "properties": {
                "new_password": {
                    "title": "New password",
                    "type": "string",
                    "minLength": 1
                },
                "current_password": {
                    "title": "Current password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "SetUsername": {
            "required": ["current_password", "new_username"],
            "type": "object",
            "properties": {
                "current_password": {
                    "title": "Current password",
                    "type": "string",
                    "minLength": 1
                },
                "new_username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        }
    }
}
